// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eStoreApi.Data;

#nullable disable

namespace eStoreApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250328152353_eStoreInit")]
    partial class eStoreInit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("estore")
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("eStoreApi.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<int?>("ParentCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("categories", "estore");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Men"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Women"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Kids"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Casual Wear",
                            ParentCategoryId = 1
                        },
                        new
                        {
                            Id = 5,
                            Name = "Party Wear",
                            ParentCategoryId = 2
                        },
                        new
                        {
                            Id = 6,
                            Name = "Foot Wear",
                            ParentCategoryId = 2
                        },
                        new
                        {
                            Id = 7,
                            Name = "Accessories",
                            ParentCategoryId = 3
                        });
                });

            modelBuilder.Entity("eStoreApi.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("ProductDescription")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProductImg")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("ProductName")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<int?>("Ratings")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("products", "estore");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 5,
                            Price = 100.00m,
                            ProductDescription = "Jacket description goes here",
                            ProductImg = "shop-1.jpg",
                            ProductName = "Jacket",
                            Ratings = 5
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 7,
                            Price = 25.00m,
                            ProductDescription = "Very nice purse",
                            ProductImg = "shop-2.jpg",
                            ProductName = "Purse",
                            Ratings = 3
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 5,
                            Price = 45.00m,
                            ProductDescription = "Nice Party Dress",
                            ProductImg = "shop-3.jpg",
                            ProductName = "Dress",
                            Ratings = 4
                        });
                });

            modelBuilder.Entity("eStoreApi.Models.Category", b =>
                {
                    b.HasOne("eStoreApi.Models.Category", "ParentCategory")
                        .WithMany("SubCategories")
                        .HasForeignKey("ParentCategoryId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("eStoreApi.Models.Product", b =>
                {
                    b.HasOne("eStoreApi.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Category");
                });

            modelBuilder.Entity("eStoreApi.Models.Category", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("SubCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
